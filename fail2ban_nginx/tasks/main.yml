- name: Checking if fail2ban is already installed
  stat: path={{fail2ban_service_location}}
  register: fail2ban_service

- name: Failing if fail2ban is not installed yet
  fail: Missing fail2ban installation here so would not continue
  when: not fail2ban_service.stat.exists

- name: Checking if new filers are installed
  stat: path=/etc/fail2ban/filter.d/nginx-badbots.conf
  register: filters
#

- name: Checking if jail.d folder exists
  stat: path=/etc/fail2ban/jail.d
  register: jail_d_folder

- name: Ensuring jail.d folder exists
  file: path=/etc/fail2ban/jail.d state=directory
  sudo: yes

- name: Checking if new jails are installed
  stat: path=/etc/fail2ban/jail.d/nginx-jails.conf
  register: jails

- name: Checking if jail.local file exists if no jail.d folder
  stat: path=/etc/fail2ban/jail.local
  register: jail_local

- name: Ensuring jail.local exists
  shell: cp /etc/fail2ban/jail.conf /etc/fail2ban/jail.local
  sudo: yes
  when: not jail_d_folder.stat.exists and not jail_local.stat.exists

- name: Copying nginx jails
  sudo: yes
  template: src={{item}} dest=/etc/fail2ban/jail.d/
  with_items:
  - nginx-jails.conf
  when: not jails.stat.exists
  register: new_jails

- name: Adding new jails to jail.local if not jail.d support
  sudo: yes
  assemble: src=/etc/fail2ban/jail.d dest=/etc/fail2ban/jail.local delimiter="###NGINX JAILS###"
  when: not jail_d_folder.stat.exists

- name: Copying Filters
  sudo: yes
  copy: src={{item}} dest=/etc/fail2ban/filter.d/
  with_items:
  - nginx-badbots.conf
  - nginx-nohome.conf
  - nginx-noproxy.conf
  - nginx-noscript.conf
  when: not filters.stat.exists
  register: new_filters

- name: service restarting
  sudo: yes
  service: name=fail2ban state=restarted
  when: new_jails.changed or new_filters.changed